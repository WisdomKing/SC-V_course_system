GRANT Alter, Alter Routine, Create, Create Routine, Create Temporary Tables, Create View, Delete, Drop, Event, Execute, Grant Option, Index, Insert, Lock Tables, References, Select, Show View, Trigger, Update ON `management`.* TO `management`@`localhost`;

com.csii.ants.management.

提交到远程仓库:
1.打开Git Bash，cd进入项目文件地址
2.输入git init
3.输入git add .
[这个是将项目上所有的文件添加到仓库中的意思，如果想添加某个特定的文件，只需把.换成这个特定的文件名即可]
4.输入git commit -m "first commit"，表示你对这次提交的注释，双引号里面的内容可以根据个人的需要
  改
5.输入git remote add origin https://自己的仓库url地址（这个url可以到自己的git中创建的仓库页面找就是最上面一个输入栏中的url） 将本地的仓库关联到github上
6.输入git push -u origin master
4-5之间应该会有一次输入账号密码的提示

ctrl+shift+减号：收起所有节点，包括所有的子节点

3.2
0244    讲idea配置mysql

打开npm:
找到package.json，右键选择show npm scripts

controller下面还有分两层，admin是控台使用，web是给网页端使用。

前面介绍路由跳转的部分
/**
 * 路由跳转的三种方法
 * 第一种方法，在方法前面加 @RequestMapping("/system/test")，但是过于繁琐
 * 第二种方法，在类前面加@RequestMapping("/system")，类多了也繁琐
 * 第三种方法，在application.properties里加server.servlet.context-path=/system
 *
 * 如果返回的是json数据用 @RestController,如果返回的是页面用 @Controller;
 */

 4.2
0219    Bootstrap来自Twitter，是目前最受欢迎的响应式框架，它基于html，CSS，JavaScript，简单，易扩展，因此有很多第三方的模板。
0324    栅格系统是bootstrap的布局，核心，需要重点掌握。
0704    学习建议，平时多浏览了解不是trap有哪些功能，在开发时遇到哪种场景再回归文档，寻找解决方案。
0723    不是差客，有很多第三方模板，有很多机构或个人通过开发模板收费赚钱，模板种类很多，空台商城，企业官网，博客等。
0748    ace admin模板官网 http://ace.jeka.by/
1001    学习建议:平时多点点看了解ace模板都提供了哪些好看的组件样式，百度搜bootstrap模板，我看看有哪些好看的模板。
-1136

4.3

4.4
0107    vue组件生命周期中有很多钩子函数。mounted和created都是vue的初始化函数。参考:https://cn.vuejs.org/v2/guide/instance.html
0116    created执行更早，在界面渲染之前执行,常用于加载初始化数据。mounted在界面渲染之后执行,常用于对界面元素的初始化操作。
0234    CTRL+F当前文件替换;CTRL+shift+R全局替换。
0428    结论:mounte组件每次加载都会再次执行。
0452-git
0535    router-view一般配合子路由使用
0643-讲解
0841-搜索框
0951    子路由里面不要加"/"
1005-git
控台页面元素修改
1157    响应式设计的一个体现：根据不同屏幕分辨率不同，弹窗显示在不同的位置。
1242    选择checkout菜单，可以让本地代码回到过去的某一个提交点。
1435    struture窗口：当前文件的代码层级结构。
1616    CTRL+Y：删除当前选中的行，只要某一行有部分被选中。这一行就会全部删除。
1731    revert：撤销本次修改
1740-讲解、操作{git的检入检出提交节点}
1919    data-toggle：按钮和模态框（弹出层）的事件绑定。
2003    {引入js到index.html}
2120    使用相对定位来设置图片
2141    回到上一层：../
2531    active:当前菜单是激活样式（高亮粗体字体，颜色蓝色等）。open:把当前菜单下的子菜单展开。
2618    学好前端三剑客：html、css、js

5.1
0016    控台单表增删改查的前后端开发，重点学习前后端数据交互，vue的ajax库、axios的使用等等。
0026    常用的公共组件:确认框，提示框，等待框，统一日志拦截器等。使用vue自定义组件制作分页组件,mybatis分页插件pagehelper使用等。
0058    //课程中会有章节在本项目中我们称为大章和小节。本章内容以大章为例介绍单表前后端开发。
0302    shift+f6重命名,重命名也是一种重构会将所有引用到的地方都一起改名甚至是注释掉的代码也会一起改掉。
0423-git
0441-大章的id设置
0445    将sql脚本和代码放在一起的好处是可以通过git提交记录来查看sql的变更记录，方便追溯。
0506    一般的表结构设计都会有一个id字段作为主键，与业务无关。
0645    小技巧：可以将常用的文件放入收藏夹，方便查找。
0710    注：每次要生成新表代码时，旧的表不要删除，但是要注释掉。同时产生产多个表也可以，但没必要。
0757-git
0906    小技巧可以帮大家提高开发效率，后续会经常用到这个小技巧。CTRL+R本文件替换，注：一定要勾选上Match Case，区分大小写。
1124-git
1348    约定：domain类的实体，是mybatis generator自动生成的，不允许手动修改。一旦修改，再次生成实体类时，收做的修改会被覆盖
1415    domain作用于service和mapper；dto作用域controller和service
1444    CTRL+Alt+V为表达式生成一个变量
1515-讲解、操作设置自己的快捷键
1710-讲解
1732    BeanUtils是一个Spring提供的一个工具类，用于实体将的复制。后续会对BeanUtils做封闭，简化使用，提高效率
1939    启动的时候会重新编译，如果编译出错，idea会自动定位到出错的地方。
2111-git

dto：data transfer object数据传输对象，用于数据传输
BeanUtils.copyProperties(来源,目标);

5.2
0018    先制作代加数据的公告列表页面。
0053    先建好公告.vue文件。并配置好路由。
0229    层级结构结构复杂时，可以使用struture窗口查看层级结构。
0341    row col-xs-12都是bootstar栅格系统的内置样式用于响应式页面的布局。需熟练掌握。
0404    选中全部，shift+tab，反向缩进
0411-git
0647    二级菜单要显示成激活状态，只需要添加active样式。
0722    完成功能：点击左侧菜单，该菜单变成激活状态，并跳到相应的路由页面。
0801-菜单激活样式
0805    silbings，jquery的方法，获取所有的兄弟节点
0853    id的命名要和路由相关，后续我们会用到这个约定。
1005    子组件调用父组件的方法可以使用$parent
1023左右写business-xxx-sidebar的，看操作
1131    <router-link to="">类似于<a href="">，用于链接跳转
1242-git
开始将页面跳转
1411    为每一个路由都加上一个name属性，后续做通用的sidebar激活样式方法时会用到。
1506-git
1537    通用的功能，要尽量做个通用的方法，要学会懒。
1600    vue内置的watch，用来监测vue实例上的数据变动，$route也是一个变量。
1702-往前听一点

通过name属性值，得到菜单id的值。前面我们有约定：id的命名要和路由有关。这叫约定优于配置
1744    此时如果从login页面点击登录到welcome页面，welcome并不会有激活样式。这里的watch，只在admin下面的1子组件互相跳转时有效
1823    js中this关键字，代表当前执行方法的对象。养成习惯，声明本地变量_this代替this。后面会介绍直接用this的坑
1938-git

5.3
vue也支持使用jquery ajax来请求后端接口，推荐使用vue axios
注意：要先进到vue cli项目，在安装插件。npm install axios --save。
--save：在pacjage.json添加依赖。不加的话仅是下载插件，项目中并没有依赖插件
0121    Vue.prototype.xxx可以理解为vue组件的全局变量。可以在任意vue组件中，使用this.xxx来获取这个字。$是代表vue全局属性的一个约定
/admin用于控台类的接口，/web用于网站类的接口。接口设计中用不同的请求前缀代表不同的入口，做接口隔离，方便做鉴权、统计、监控等

报cors跨站点资源分享，属于跨域问题。同个ip的不同端口间的访问也属于跨域。前后端分离必然有跨域问题(Cross-origin resource sharing)

1030    使用data定义组件内的变量，可用于做双向数据绑定，双向数据绑定是vue的核心功能之一
使用this.xxx来访问组件内的变量
http://localhost:8080/business/admin/announcement/list

1523    url目前是写时的，后期会优化
1819    是否直接访问gateway就不需要跨域配置了呢？需要再验证一下，经过验证，不论如何都是需要
1915    单个SpringBoot项目使用CorsConfig解决跨域问题，使用SpringBoot Gateway的，使用CorsWebFilter解决跨域问题
1953    如果配置的是IP端口，那发布到生产时就有可能访问不到，就算配置了maven多环境，也需要提前知道上线后的IP和端口，提前配置好

5.4分页功能
0011    mybatis-generator生成的代码是不带分页功能的，使用pagehelper插件来扩展分页功能
0205    pagehelper的分页参数，pagenum是从1开始的
0242    分页功能的关键字limit。从日志可以看出，改sql执行的是limit 1。相当于limit 0,1。即从第0行开始，查1条。{行号从0开始}
0309    语句规则：调用startPage方法后，执行的第一个select语句会进行分页
0448    分页查询功能需要两条sql，一条查总记录数（通过每页条数计算出总共有多少页），一条是查当前的记录
0548    泛型需要熟练掌握，在写一些通用类、工具类时很好用
0658    使用泛型的地方都可以使用object代替，但是泛型可以在编译期就发现问题，并且避免了代码中写强制类型转换
1138    讲了业务流程
1224    但传入的分页参数不合法时，比如0,0 程序不会报错，而是查所有记录，分页不生效
1325    在开发完代码后，需要进行测试，特别要针对一些边界值做测试
1406    接口请求参数传递，尽量使用post，使用get请求在URL里拼参数的话会使URL变得很长，有些浏览器或服务器会对URL长度做限制，导致请求失败。
1546    一，编辑变量。二，为什么变量赋表达式。三，选择模板的语言。
1602    日志输出时变量使用点位符，比如LOG.info("输出:id={},姓名={}",id,name),而不是LOG.info("输出:id="+id+",姓名="+name"")
1656    post请求有多种参数传递，通过header里的Content-Type来标识，常见的有两种，一种是表单的方式，另一种是json[流]的方式
1707    jquery默认是以表单的方式,vue Angular默认是用Json的方式。
1753    要接收流的方式应该加@RequestBody

5.5
1009    $refs也是vue的一个内置的变量。根据$refs.xxx的xxx来获取子组件
1242    v-bind:list="list",前面的list是分页组件暴露出来的一个回调函数，后面的list是announcement组件的list方法
1333    开始讲解pagination.vue
1457    props定义父组件先子组件传递的参数，可以是一个函数或数据。本组件中个暴露了两个参数list和itemCount给外部
1608    v-bind:item-count="5"表示只显示5个框

5.6
0022    新增功能页面的设计可以平时浏览bootstrap文档，看看都有哪些组件，用的时候心里有数。
0156    模态框主要分为三大块。Model-headler是标题;model-body主体内容大张的表单内容就放在这里;model-foot是底部按钮。
0200    model的样式有display:none，所以模态框初始不可见，这段代码可以放在html代码的顶部，也可以放在底部
0219    小技巧:.选中开头一小部分代码。b.滚轮滚动到结尾鼠标拖动滚动条到结尾。c.按住shift并鼠标点击结尾。这种操作特别适合选中大段文本，比如一次要选中1万行文本。
0350    $(".modal")里的model是CSS样式选择器。模态框代码里有class="modal"样式；.model里的model是内置的方法，用于弹出或关闭模态框。
0517    如果发现这里启动项少了，可以通过刚才的操作添加。
0553    可以使用$(".modal").model({backdrop:"stactic"});禁止点空白的地方关闭某些场景需求会用到这个功能。
0633    vue cli会将我们写的html，js，CSS，代码编译压缩空格和换行都会被压缩掉，导致按钮间的间隔没有了。
0649    html有很多转义字符，比如你想在界面显示文本"<text>",但是浏览器会认为<text>是一个标签，这时可以在html中使用转义字符：&lt;text&gt;
0746    <label for="id">有个场景会经常用到：点击复选框checkbox时选中，使用label for后，点击label的文字，也能选中复制框。
0835    复制一段代码小技巧，选中到上一行的结尾，然后CTRL+d一步到位。
0907-20    模态框弹出和关闭，可以用js代码，也可以用button属性data-dismiss="css选择器"关闭；data-toggle="css选择器"打开。
0941    解决'no-unused-vars'校验，警告不要定义一下没用的变量
1050    小提示：CTRL+d复制光标所在行，但是不会覆盖粘贴板，也就是说你上一次CTRL+c复制的内容依然可以CTRL+v粘贴。

短ID设计与后端代码开发
1208    面试：为什么不用自增id？自增id至少有三个问题：一，id是连续的容易被探测。二，需要加一次查询才能得到id的值。三，分布式存储中id会出现重复。
1220    uuid是根据时间、机器等多个维度生成的32位16进制数，有生之年不会重复。在uuid的基础上封装了8位短uuid。
1314    xxx.sout用到了postfix，更多关于postfix的介绍可以关注《开发工具idea到从入门到爱不释手》。
1750    将绑定好数据的announcement作为前后端交互传参
1847    经验分享：提交注释时把大功能[增加新增公告功能]写在前面，这样浏览提交记录时更清晰。
1910    对于常用的代码可以提取成工具类，简化开发代码，提高开发效率。
增加增加复制工具类CopyUtil
1926    该工具类封装了BeanUtils.copyProperties,利用反射,牺牲一点点性能（可忽略不计）换取开发效率。[甲蛙自己写的]
统一返回参数responseDto
2018    纯接口应用一般会规范固定的请求参数，如版本号，请求流水等，在规范固定的返回常数。如返回码，返回描述等。方便调用方统一处理。
2330    列表查询业务上一般都是成功的[查不到数据也是成功的]，所以不需要判断success。保存有可能失败，所以需要判断success。
2448    验证功能:一，列表查询没问题;二，保存功能没问题;三，保存成功后关闭modal并刷新列表。
2526    CSS选择器,可以通过id，class标签等选择页面元素。
2537    问题：同一个页面有多个model时，选用class选择时会出现重复，所以需要给每个model增加id属性。
2642    需要测试Model相关的操作点击新增，点击关闭，点击取消,点击保存,点击空白等。

5.7增加删除公告功能
0043    新增和编辑功能弹出来的模态框是同一个。Vue、controller、service. 调用的都是同一个方法，只是到service层再根据id是否有值来判断新增还是删除
0422-public改为private
0440    养成习惯：对代码做了多简单的改动，都要做回归测试。
0539    hidden-md：中等屏幕隐藏，其他可见;hidden-lg：大屏幕隐藏，其他可见;visible-xx,具体可以参考：https://v3.bootcss.com/css#responsive-utilities-classes
0619    在响应式页面中，同一个页面在大屏和小屏里显示的内容不太一样。大屏显示的内容更多。hidden-xxx，visible-xxx会经常用到。
0805    1.将表格每一行数据传到edit中做处理
0813    2.递过来的一行数据announcement。赋给vue变量_this.announcement。
0820    vue变量_this.announcement会通过v-modal属性和form表单做数据绑定
0946    数据显示：将表格行数据显示到表单。反过来，数据修改：修改表单影响表格行数据。
1114    发现问题：对文本框编辑后，点击新增弹出文本框，会带出上一次编辑过的值。
1156-git
1258    delete是js关键字，vue方法里面不能使用js关键字
1422    restful风格简单的理解，通过看URL就能知道这个请求是要对什么资源做什么操作。
1456    后端的代码还没有写，所以报错404需要熟记常用的返回码有：200、301、400、401、403、404、500、503等
1605-1655    变化的参数就用大括号括起来。。。
1814-@PostMapping
1908-git

5.8
0040    删除是有风险的操作，需要有确认的动作。
集成sweetalert2官网http://sweetalert2.github.io/
0526    通过修改timer可以设置弹出的时长；设置icon可以设置成成功、错误、警告等。
0559    养成一种思维，将通用的代码做成组件。
0633    如果组件包含html代码，可以使用vue插件，如果组件只有js代码可以用原生的js。
0933    toast是js全局变量，可以在其他js文件中使用，也可以在vue组件中直接使用
1056    等待框的作用：1.让用户知道后端正在处理，耐心等待。2.防止用户恶意点击重复。
1744    组件化的好处只需要修改组件代码就可以改变组件的样式，使用的地方完全不用动。
2015    将变化的的代码（组间无关的代码）作为回调函数传递进来。

5.9
0253-git
0341    后端分离的项目后端接口需要增加和前端一样的校验，防止被绕过前端界面，利用第三方工具如postman，直接访问后端接口。
0419    用return false的设计也没有问题
0438    自定义异常可以继承RuntimeException或者Exception，一般项目内部的业务异常可以用RuntimeException，不需要try catch。如果是开发一些框架或工具类,明确告诉外部需要做异常处理的，可以用Exception,另外还需要考虑事物中的异常处理。
0610    现象：后端出异常，导致前后收不到结果。vue中的.then方法没有执行，等待框没有关闭，导致不能继续任何操作，只能刷新页面。
0812    @ControllerAdvice是Controller增强器，可以对Controller做统一的处理，如异常处理和数据处理
ctrl+alt+T
准备测试一下如果字段允许为空的校验
1258    有时候我们的接口原本是不对外的，或者只跟限定的第三方应用做对接。这时为了内部安全，不应该把参数的校验规则暴露出去，所以需要模糊的返回信息。类似的。登录接口应该返回用户名或密码错误，而不是用户名不存在或密码错误，这样容易被探测。
1410    开发过程中提示请求参数异常，说明后端有校验拦截前端没有此时应该把前端校验加上。
1431-git
使用aop制作统一的日志输出
1504    问题：从打印的日志内容看不出业务信息日志，不仅开发时有用，生产运维时查看业务日志也很重要，所以需要把日志加上业务信息。
1622    统一日志处理，可以使用aop，也可以是Spring拦截器
1728    约定优于配置又一个约定：查询类接口，以list或query开头保存，用save开头，删除则用delete的开头。
1758-操作
1841-讲解
1851    敏感字段是不能铭文打印或存储的，比如身份证，手机号
1909    越少图片上传图片会转为base64文本，太长，没有打印的必要，且占用空间，可以不打印。
1921-1940讲解切面的
1946
2007    一个日志跟踪号用来标识一次请求。生产环境中往往同时会打印多个请求的日志，通过"grep日志跟踪号"可以查找出一次请求的所有日志。
2104-2110讲解日志跟踪号的设置
2159-git

6.1
0012    FreeMarker是一款模板引擎，通过模板生成文件，包括html页面、excel等，本章将通过FreeMarker制作前后端代码生成器，提高开发效率
0048    代码生成器的模板：2分钟内完成电表的增删改查管理，包含前后端代码
0107    没得模板引擎有FreeMarker和thymeleaf，Freemark是资历老，1999年就有了有广泛的群众基础。thymeleaf是spring官方推荐的，所以受众也广。
0120-0245-两者的代码风格不同的比较
0235    FreeMarker的逻辑主要写在自定义标签中。thymeleaf逻辑主要写在标签属性中，Web开发时可读性好一点，随着版本不断更新，两者性能正常使用没有什么区别，不用纠结。
0256    增加FreeMarker依赖
0305    增加generator子模块，代码生成器专用，并添加FreeMarker依赖
0333    增加模板文件test.ftl和启动文件TestUtil.java
0345    .ftl是FreeMarker约定的后缀，也可以改成其他任意后缀
0435    ftlPath：模板文件所在路径，toPath：要生成的文件的路径
0618    Test.java文件可以不用删，FreeMarker生成文件会自动覆盖
0634-git

6.2
0010    本章将以头条表的增删改查功能为例来制作代码生成器。
0146    mybatis-generator支持同时生成多个table，但我们最好每次只生成一张表，其他表都注释掉
0211-git
0238    制作FreeMarker工具类，将通用代码提取成公共方法
0340    ftlPath是统一放模板的地方，这个属性值一般不会变，所以可以直接放到工具类里
0537    我们会用代码生成器生成controller、service、dto、vue的代码，这些代码的文件路径都不一样，toPath是变化的，所以把toPath变成入参
0857-git
Service层代码生成
0940    Paste without Formatting:不带格式化的粘贴，复制的文本长什么样，粘贴出来就长什么样，idea不会自动格式化。
1039-开始讲解变量名的替换属性？？？
1351-git
controller层代码生成
1537    注意：每次执行生成器，都会重新生成service和controller代码，只是因为service生成后没变化，所以没在changlist中显示
1612-git

6.3
0322    dto层的生成，需要知道表的所有字段，每个字段的类型需要映射成Java类型，并且需要把字段变成小驼峰和大驼峰。比如course_id变成courseId,CourseId
0415    FieId类；用于存储每个字段的信息。流程：根据表明获取所有的字段信息，再将字段信息填充到FieId类中。得到FieId列表，之后将FieId列表传变量传入模板。
0840    TypeSet作用：整理出所有用到的Java类型，生成import语句，一种类型只需要import一次，所以用set去重。
1115-git
通用代码生成器和generator的整合
1204    问题：新表生成代码时，generatorConfig.xml得改动。ServerGenerator的代码也要改动。
1223    ServerGenerator的配置不再是写死的，而是去读generatorConfig.xml的配置
1341-讲解

6.4
vue cli多环境处理
0046    问题：生产环境和开发环境的地址是不一样的，所以不能把固定的ip地址写在代码里。
0114    {NODE_ENV(node environment):用来表示构建项目的当前环境}=development代表开发环境;=production代表生产环境
0126    自定义多环境变量必须以VUE_APP开头，{VUE_APP_SERVER=http://server.imooc.com}是因为目前还没有随便写的
本机启动默认是开发环境
0225    代码中使用环境变量：process.env.xxx
0330没有切换到生产环境，原因：文件应该在admin的根目录下
0538-git
0603    新建vue.ftl，代码从announcement.vue里面拷过来。注意：要使用Paste without Formatting:不带格式化的粘贴
0616    将模板中特定的代码替换从变量
1117    copy Relative Path复制相对路径;copy Path复制全路径
1305    template标签内的html代码的缩进变成四个空格。正常情况应该是四个空格，我们为了演示需要把所有前端代码的缩进都设置成了两个空格。
1419    Paste without Formatting，不带格式粘贴，已多次用到。复制时是什么样，粘贴时也是什么样，不会自动格式化。
1449    利用我们设置好的html和js代码是两个空格的缩进，将ftl代码的代码粘贴到vue文件中，让idea帮我们做格式化成两个空格。
1859-git

6.5
前后端模板增加字段校验。
0214    约定:当length>0时，表示需要对length做校验，length=0时表示不需要校验。
0239    疑问：char为啥不需要校验长度？解答：char类型一般用于固定长度的字段，常见的有id字段和枚举字段。Id字段不需要校验；枚举字段界面一般会有下拉框，不是手输的，不需要校验。
0500    1！=1的设计，类似于mybatis的动态sql设计，在拼动态while条件时会在前面加1==1。

0752-修改validator.js
0840-git
0900    cdn.bootstar.com偶尔会出现404，导致query.blockUI.min.js没有加载出来。原因可能是因为cdn不稳定，也有可能是本地网咯不稳定
1032-git
1443-   原因：idea可以设置知道导入优化代码，对import代码做整理，整理顺序、自动增加需要的，去掉没有用的
1525-讲解设置操作
1600    实际开发中，是事先写好xxxService的代码，再根据代码去修改模板，测试生成的代码和手写的代码一致
备注：时间这里可能需要增加手动增加，因为不符合驼峰命名
1709    ？？？controller模板改动了，但是xxxController之前已经手动把id的校验删除提交了，所以本次删除的代码没有变动
1725-git
1828    解决不小心漏提交代码，又不想有多次一样的提交记录
1927    追加提交：两次提交的文件会合并到一起，本次提交的注释会覆盖上一次提交的注释
2052-讲解

6.6
前端下拉框和表格枚举的设计
0052    将文本框换成下拉框
0308    讲解怎么使用过滤器[]
0434    filter使用示例
0515-git
0543    分析CHARGE
0557    对于下拉框的列表值，一般会提取成全局的常量，方便多个页面使用。
0638    index.html导入枚举类型的js
0735-git
新增EnumGenerator用于生成启动枚举
0751    后端枚举类
0806    比如说：会员状态一般有正常，注销，冻结等，这些状态不是在页面上选择的，而是会员注册的时候,默认是正常的。
0908    直接写c还有一个缺点就是从代码上看不出来c是什么意思，后期很难维护。
1052    讲解枚举怎么用
1141    从前后端数据传输到数据库存储都是用了c、a、r。
1406    问题：前端的枚举，缺少枚举类型的信息，后续我们会碰到直接在前端用枚举值，我们的写法是直接SECTION_CHARGE.CHARGE.key,而不是直接写c。
1625    将后端枚举变成启动常量
2034    原理：通过反射得到枚举类的枚举类型code、desc。然后通过字符串拼接的方式得到最终完整的Json字符串，再通过写文件的方式直接写入enums.js。小提示：也可以用freemarker的模板方式实现。
2147    generator增加server依赖
2153-git
2231    前端报错，修改模板
2316    去掉去掉控制台的枚举输出
2339    如果手动改过代码，重新生成代码时，需要用代码对比的方式，将手动改过的代码还原回来。
2406    git的小妙招- 重新变成手动修改的代码
2433-git

6.7
生成器使用-
0014    课程表设计
0039    注意，数据库存储的是你秒为单位的整数，比如36000，因为会显示时分秒，比如10:00:00，并且这个字段是自动生成的，不是手工填写的，后续会介绍。
0123    你是日期字段都使用datetime三精确到毫秒。见面显示可以指到秒弹落库要精确。
0322    后端报错：有一个必输的校验，将String改为Object了，还有一个长度校验，会自动将数据格式化，比如[2000]格式化成[2,000]。
    {对于数字的，因为freemark自身的原因，使用"field.length"会将"2000"变成"2,000",应该使用"field.length?c",小写的"c"的意思是将数值转成字符串的一个函数}
0358    注意，数据库有变动，需要及时生成代码。
0504    Free market有很多内置函数，方便对数据做各种操作，格式化等。
0517    前端同样的长度校验报错
0533    生成器的功能会随着使用场景的增加而不断扩展。
针对枚举做一下处理
1049-git

1059-布置了一个作业，将枚举相关的代码也在添加到生成器中，然后一次生成出来。提示：并不是所有字段都是枚举，要有一个标识来标识字段是不是枚举
1131    我们生成器的数据来源是数据库，所以在源头上加标识。
1207    小结：我们第一章写了三个生成器，后端、前端、枚举，在配合上持久层生成器，可以快速的完成单表增删改查功能。
1221    通过刚才课程管理的演示，如果没有枚举类似字段，基本可以在两分钟之内完成单表证增删改查。大家也可以再做升级，把枚举字段的代码一起生成。
1235    技术扩展。自制自己项目的代码生成器；导出复杂Excel，生成静态页面；freemarker的使用核心就是制作模板。
1245    以导出excel为例
1252    用jar包的方式很难导出复杂的Excel，使用模板可以轻松导出复杂的Excel，包括我各种合并单元格，字体，背景设置等等。
1308    你好最重要导出了Excel的样子，再通过这个Excel制作模板。
1310-1517-讲解怎么制作excel模板[大概？]excel要另存为.xml文件

6.8
0008    升级作业将枚举类型的字段加入到代码生成器里面。
0123    约定枚举类型的字段增加枚举中文，并且将对应的枚举类写在[]中。
        注意看sql脚本的变化。field、dbutil、vue的模板都有改动，

0251    你也可以考虑将toUnderLine方法提取到工具类中。
0447-git

第七章讲将课程、大章、小节关联起来
7.1
解决存入图片的问题
0305-0357   图片的路径问题
0756    加入图片并修饰后的代码讲解，提前30s是页面展示
0824    scoped:style下的样式只应用于当前组件，防止互相污染
0844-git
0910    完成功能，在课程列表中增加大章按钮，点击会跳转到大章页面，并且筛选出当前课程下所有的大章。大章页面增加显示课程名称，并可以返回课程管理页面。
1003    新增sessionStorage.js和localStorage.js 。sessionStorage是会话缓存，浏览器窗口关闭，缓存就没了。localStorage是本地缓存，浏览器关闭后，下次打开还能读到。
1026    sessionStorage和localStorage只能操作字符串，这是我们经常要放对象数据，所以要封装一下。
1152    组件（页面）间传输数据可以用h5原生的sessionStorage和localStorage。也可以用js全局变量，也可以用vuex store，但是后两者在页面刷新时会丢失数据，所以推荐使用h5原生的。
1343    null.name会报错，{}.name不会报错
1507    小提示：每写一小段代码，需要简单测试下
1530    简单的跳转可以用router-link（类似a标签）如果有其他的操作，可以写一个click方法，比如前面完成的从课程跳到大章，需要先缓存课程信息，所以写click方法
1645-git
1813    大章页面应该只显示当前课程下的所有大章
1954    toString主要是为了打印日志用的，模板应该选择StringBuffer
shift+f6 修改所有的同名参数
2058    经验分享：service成的查询条件写的松一些，灵活一点。service成可能被多个controller调用，也可能被其他service调用，没个调用的查询条件可能不一样
2249    controller需要严格一些，根据前端的业务，校验参数
2242-git
2859    service同样写的灵活一点，查询条件根据参数是否为空来判断
2912    criteria类似于写where条件

vue安装日历组件
https://www.jianshu.com/p/8336f3f6941e
1. npm i vue-full-calendar
2. npm install --save moment
3. npm install fullcalendar
4. npm i element-ui -S
5. npm install babel-plugin-component -D
6. npm install vue2-datepicker --save
7.


可能的参考
https://www.helloweba.net/javascript/446.html
https://blog.csdn.net/weixin_43023873/article/details/91850497
https://www.jq22.com/yanshi11975
https://github.com/zwhGithub/vue-calendar

var和let的区别
https://www.cnblogs.com/caizhou520/p/14314356.html

8.1
0230 这里改错模块了，应该改file模块的启动类
0323 这里会输出到项目所在磁盘根目录，比如我的项目在d盘，那么理智的目录就会输出到D:/log/xxx
0438 讲解占用带宽问题
0532-git
0654 type=“file” 文件上传控件
0744 触发文件上传动作方法一：增加一个新的文件按钮“开始上传”
0757 触发文件上传动作方法二：在文件上传组件上增加change事件
1325 如果不加上短id，上传的文件名极可能重复，文件就会互相覆盖。注意：文件名一样不代表文件就是一样的
1632 这里我们还没有通过代码创建文件夹，需要提前创建

8.2
0101 springboot静态资源的配置，静态资源包含图片、css、js等等
0316 测试路由转发到file模块是否有效，测试的时候要注意浏览器是否有静态资源的缓存，可以用ctrl+f5强制刷新，也可以用chrome无痕浏览来测试
0546 img-responsive:bootstrap内置的样式，图片自适应
0617-git
0643 利用bootstrap栅格系统，一个div是12个，可以让图片只占4个宽度
0847 @Value()注入属性值
0932 利用Maven的多环境配置，将开发环境和生产环境配置成不同的值

8.3
0029 优化的点：有一个单独的按钮来代替file控件，且操作流程没有变化
0448 优化：使用vue的$refs来获取组件
0816 一个项目中，很多地方都会用到文件上传功能，所以有必要把文件上传功能做成通用组件，这样子以后也可以直接把文件组件直接拷贝到其他项目直接用
0920 props，用于父子组件传递数据，可以理解为组件可配置的属性

8.4
0117 为组件增加上传成功后的回调函数，和组件不相关的业务代码应该由外部通过回调函数传进来
0340 公共的代码放到组件里，变化的代码做成可配置的属性，由外部传入
0517 如果一个页面放了两个文件上传组件，会出现如果input的id重复，可以吧id也做成可配置的
0640 纠正一下：这里应该是v-bind：input-id，这里写成id，相当于值没有配置上去，那么组件内的id就会取默认值
0926 bug：连续选择同一个文件的时候，第二次就会没有反应

8.5
0413 USE<数据库名> 用于切换数据库的
0454 会对关键字的表、字段、增加反引号``
0556 在VueGenerator中增加了关于枚举字段的代码，所以需要生成枚举字段
0810 统一文件名为8位uuid+文件后缀。下一章，我们还会进一步规范文件名
1038 文件记录不允许编辑和删除，但是可以做一些统计的功能，比如文件大小、文件类型的统计。也可以增加文件审核功能，对不合规的图片、视频做处理

8.6
0250 小技巧：不用写出最终的数值大小，直接写表达式，让程序来计算，这种写法的好处是方便维护和修改，比如我写一个5248880，看不出来是是多少，但是写5*1024*1024，一看就是5M
0847 讲师头像放在teacher目录，课程封面和视频放在course目录
1105 讲解-File.separator：在不同的系统环境下生成相应的"/"

8.7
0956 springboot有默认上传文件大小的限制，可以通过配置修改
1015 max-file-size：单个文件的大小; max-request-size：请求的大小。比如一次请求可以上传多个文件，这时这两个值就不一样了
1331 获取视频时长
1417-git
1551 新增【课程内容表】，用于管理当前这篇内容用到的文件，支持新增，删除。上传文件佛欧自动新增一条记录

8.8



calendar.vue开发
a.1
1.
2.
3.
4.







9.1

9.2

9.3

9.4

9.5

9.6

10.1
0011 前面介绍的文件上传是基于本地文件服务器的文件上传，但是自己搭文件服务器会有很多运维问题，比如磁盘满了要扩容，高峰期要增加带宽，低谷期减少带宽，为了安全，我们还要对文件做备份
0041 所以一般会选择云平台来存储文件，云平台有很多，比如阿里云、腾讯云、百度云等，云平台做的最好的是亚马逊，我们这里选择最大的阿里云
0102 我们文件服务器答得再好，也比不上专业的，还不如花很少的钱找阿里云的人做运维
0120阿里云OSS介绍
0512 防盗链：防止别人盗用你网站的资源链接，包括视频、音频、图片
0657 从浏览器通过ECS（服务器）访问OSS，算内网访问，不计算流量费，但是要考虑ecs的带宽问题。从浏览器直接访问oss资源，算外网访问oss，需付流量费，但是可以不考虑带宽
0846 云服务ecs（elastic compute service）

10.2
0057 bucket：存储空间，名称必须全阿里云唯一
0333 上传的文件默认都继承bucket，这里的设置读写权限，只针对当前的文件有效



10.3

10.4

10.5

10.6


11.1
0108 登录名是唯一键，登录名不能重复
0356 登录名是不可编辑的，登录名一般会和其他表有关联，一旦登录名修改了，这些关联信息就没有了
0417 根据传入登录名到数据库中惨遭是否有记录，有记录就说明用户已存在
0607 loginname是唯一的，所以查出来要么没有记录，要么只有一条记录
0634 我们要的功能是校验用户名是否存在，所以也可以吧返回值改为true或者false，而不是返回user对象，但是这种写法不够通用，所以我们选择返回user
0711 如果user语句存在了，这从数据库中查出来的，我们可以约定为Db结尾，用userDb
0802 业务上的逻辑校验，在校验不通过的时候，使用业务异常（自定义异常而不是系统异常）
0827 继承runtimeException的一个好处就是代码不需要捕获。如果直接是继承Exception，代码需要捕获，或者编译不通过
0906 大家也可以自己把code加上，定义一套异常码
0931
1328 aria-*
1427
1449 使用方法:1.在BusinessExceptionCode增加一种异常枚举；
             2.在业务代码中抛出指定枚举类型的业务异常
1601 解决侧边栏激活样式：
1853
1954
2021
2104
2140
2212

11.2
0147
0301 盐值：也叫salt值，加上盐值后，密文不利于被破解（查询）
0408
0429
0459
0539 颜值可以是随机的一串值，但是所有用到的地方必须是同一个值
0613 将hex_md5+盐值包装起来
0642

11.3

11.4

11.5

11.6

11.7

11.8

12.1

12.2
0031 资源名称一般是用页面上看得见的元素:菜单、按钮等
0041 页面对于vue框架来说，就是路由
0324 如果是一个页面的所有操作系统统一控制权限，request可以填写相关接口的前缀
0445 原因：资源表的实体类是Resource，和@Resource注解同名，导致冲突
0538-git
0616 资源点是开发阶段就绑定的，所以不是上线后一个一个配置的
0639 资源关联的最简单的方法：上线前准备好sql，刷库
0649 将资源管理做成资源树进行管理
0713 填入数据：带有层级结构的json字符串
0846 用法：以后开发新功能的时候，就在该文件中加入之类的资源，可以上线前将新的资源json通过控台保存进数据库
1041 嵌套实体类
1213 将带有嵌套结构的jsonList里所有的节点取出来，组成简单的list
1325 add方法是一个递归函数，功能是将d节点下的子节点添加到list中，如果子节点下还有孙子节点，则递归调用add方法
1521 将节点一个个取出来，放入list中
1855 使用倒数循环
1909 资源的保存是将树结构转成列表，重点是children属性; 资源的显示是将列表转成树结构，重点是parent属性
1925 使用倒序循环，所以先得到最后一条
1940 使用嵌套循环去查找当前parent值对应的记录
2006 将010301这个resourceDto，放到0103这个resourceDto.children里
2105 小知识：一边循环，一边删除list中的对象，所以要使用倒序循环
2400 List中有父节点的对象都会被remove掉，最终留下来的就是顶级节点

12.3
0340-git
1202 这里漏了一个事务注解，一个功能里有多个SQL操作需要增加事务
1434 批量操作思路：先将原有的删除，在批量新增
1552 写代码不要指望一次就写好，一般都是一个小阶段小阶段的调试一下，没问题就提交一下
1823-视频节点
2302 依赖vue的双向数据绑定特性，可以将复杂的页面操作变成简单的数据操作。很多前端框架都有双向数据绑定的特性，如angular和微信小程序
2615 查关联表，得到的是userid，但是要显示的是loginName。这里也可以通过写自定义mapper，把user和role_user表关联得到loginName

12.4
0040 小提示：工作中可以把一个大功能拆分为一个个功能点，每个功能点完成后就打钩，这样子不容易遗漏功能
0134 一个资源可以用到多个接口，多个资源的接口就可能重复，使用用set去重
0823-视频节点
0911 关于User的权限设置的比较细，每个请求接口都可以单独控制，关于Resource的栖霞四中比较粗，所有的接口用同一个request控制
1006 问题（引入阿里云播放器）：讲师管理页面，讲师的显示重叠到一起了。但是这个页面已经很久没有动过了。之前介绍讲师管理时，都是确认了页面正常才提交的代码。不知道什么时候出现的bug
1022 程序员常用口头禅：这肯定不是我的问题，昨天还好好地
1105 点中某一条git提交记录，按shift往下拉，同时点击左键，
选中多条提交记录，这是idea会显示出这些提交记录对应的所有修改点，可以看下其中有没有可以修改点。在实际工作中这个操作经常用于code review
1123 但李对某一个提交有怀疑，可以将代码还原到这个提交点，在运行页面看看是否有问题
1133 白色背景的提交，表示我们本地的代码不包含这些提交的修改点
1250 css样式问题，可以优先用F12来查看有没有可疑的样式
1339 前端常见问题：引入新的css文件后，导致原有页面错乱
1413 写自定义样式的时候，不要用通用的单词，很容易和别人的样式出现冲突，可以给样式加上一些固定的、有意义的前缀
1440 解决方法：为每一个样式加一个“aliplayer-”前缀，或者加一个顶级的".aliplayer"样式
1643 scoped：只应用于当前组件

12.5
权限拦截功能暂缓开发
0027 目前只修改了用户管理的拦截，以用户管理为例
0103 每次修改权限配置，需要重新登录后才生效







13.1网站开发
0022    采用代码走读的方式
0312    关于版本更新

13.2

13.3

13.4

13.5

13.6

13.7

13.8

13.9

13.10

13.11

13.12

13.13

14.1

14.2

14.3

14.4

15.1

16.1
0136    修改负载均衡问题。后续介绍生产发布时，会将eureak换成nacos，既是注册中心又是配置中心，解决不同环境试验不同配置。开发

16.2

16.3

16.4

16.5

16.6

16.7

17.1

17.2

17.3

17.4

17.5

17.6

17.7

17.8

17.9

17.10

17.11
















